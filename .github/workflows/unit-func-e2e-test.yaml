name: unit-func-e2e-test

on:
  push:
    branches:    
      - 'main'
    paths:
      - "**.go"
      - "**.yaml"
      - "!capm.yaml"
      - "!osc-secret.yaml"
      - "!example/**.yaml" 
      - "!testclean/**"
      - "!helm/**"
      - "Makefile"
      - "hack/*.sh"
      - "!docs/src/**"
      - "!hack/json-format/**"
  pull_request:
    branches: [main]
    paths:
      - "**.go"
      - "**.yaml"
      - "!capm.yaml"
      - "!osc-secret.yaml"
      - "!example/**.yaml"
      - "!testclean/**"
      - "!helm/**"
      - "Makefile"
      - "hack/*.sh"
      - "!docs/src/**"
      - "!hack/json-format/**"

env:
  # Global Environment Variables
  KUBECONFIG: ${{ github.workspace }}/rke-cluster-for-cluster-api/rke/kube_config_cluster.yml
  OSC_ACCESS_KEY: ${{ secrets.OSC_ACCESS_KEY }}
  OSC_SECRET_KEY: ${{ secrets.OSC_SECRET_KEY }}
  OSC_REGION: ${{ secrets.OSC_REGION }}
  OSC_SUBREGION_NAME: ${{ secrets.OSC_SUBREGION_NAME }}

jobs:
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/setup-go@v3
        with:
          go-version: '1.23'
      - name: Run Unit Tests
        run: make unit-test
        shell: bash  

  testenv:
    runs-on: [self-hosted, linux]
    needs: [unit_test]
    steps:
      - name: Checkout Repositories
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Checkout osc-k8s-rke-cluster
        uses: actions/checkout@v3
        with:
          repository: 'outscale-dev/osc-k8s-rke-cluster'
          path: "rke-cluster-for-cluster-api"
          ref: master
      - name: Install Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y kubectl docker-buildx-plugin
      - name: Install golang
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.23'
      - name: Install kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: v4.5.7
      - name: Deploy Cluster
        uses: ./rke-cluster-for-cluster-api/github_actions/deploy_cluster/
        with:
          repository_folder: "rke-cluster-for-cluster-api"
          osc_access_key: ${{ secrets.OSC_ACCESS_KEY }}
          osc_secret_key: ${{ secrets.OSC_SECRET_KEY }}
          osc_region: ${{ secrets.OSC_REGION }}
          image_id: ${{ secrets.OMI_ID }}
          control_plane_vm_type: ${{ secrets.CP_VMTYPE }}
          bastion_vm_type:  ${{ secrets.BASTION_VMTYPE }}
          worker_vm_type: ${{ secrets.WORKER_VMTYPE }}
          rke_version: ${{ secrets.RKE_VERSION }}
          kubernetes_version: ${{ secrets.KUBERNETES_VERSION }}
      - name: Retrieve NodePort Info
        run: |
          export NODEPORT_PORT=$(kubectl get svc docker-registry -n default -o jsonpath="{.spec.ports[0].nodePort}")
          export NODEPORT_IP=$(kubectl get nodes -o jsonpath="{.items[0].status.addresses[0].address}")
          echo "NODEPORT_PORT=${NODEPORT_PORT}" >> $GITHUB_ENV
          echo "NODEPORT_IP=${NODEPORT_IP}" >> $GITHUB_ENV
      - name: Run Functional Tests
        run: make testenv
      - name: Cleanup CRDs
        if: always()
        run: |
          kubectl delete crds --all || true
          kubectl delete ns --all --force --grace-period=0 || true

  e2etest:
    runs-on: [self-hosted, linux]
    needs: [testenv]
    steps:
      - name: Checkout Repositories
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Checkout osc-k8s-rke-cluster
        uses: actions/checkout@v3
        with:
          repository: 'outscale-dev/osc-k8s-rke-cluster'
          path: "rke-cluster-for-cluster-api"
          ref: master
      - name: Deploy Cluster
        uses: ./rke-cluster-for-cluster-api/github_actions/deploy_cluster/
        with:
          repository_folder: "rke-cluster-for-cluster-api"
          osc_access_key: ${{ secrets.OSC_ACCESS_KEY }}
          osc_secret_key: ${{ secrets.OSC_SECRET_KEY }}
          osc_region: ${{ secrets.OSC_REGION }}
          image_id: ${{ secrets.OMI_ID }}
          control_plane_vm_type: ${{ secrets.CP_VMTYPE }}
          bastion_vm_type:  ${{ secrets.BASTION_VMTYPE }}
          worker_vm_type: ${{ secrets.WORKER_VMTYPE }}
          rke_version: ${{ secrets.RKE_VERSION }}
          kubernetes_version: ${{ secrets.KUBERNETES_VERSION }}
      - name: Run E2E Tests
        run: make e2etestexistingcluster
        env:
          IMG: ${{ env.NODEPORT_IP }}:${{ env.NODEPORT_PORT }}/cluster-api-outscale-controller:${{ github.sha }}
      - name: Cleanup CRDs
        if: always()
        run: |
          kubectl delete crds --all || true
          kubectl delete ns --all --force --grace-period=0 || true
      - name: Destroy Cluster
        uses: ./rke-cluster-for-cluster-api/github_actions/destroy_cluster/
        if: always()
        with:
          repository_folder: "./rke-cluster-for-cluster-api"
          osc_access_key: ${{ secrets.OSC_ACCESS_KEY }}
          osc_secret_key: ${{ secrets.OSC_SECRET_KEY }}
          osc_region: ${{ secrets.OSC_REGION }}
