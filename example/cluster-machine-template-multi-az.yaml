apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: cluster-api-multi-az
  namespace: capo-test
  labels:
    cni: "cluster-api-multi-az-crs-cni"
    ccm: "cluster-api-multi-az-crs-ccm"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["10.42.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OscCluster
    name:  cluster-api-multi-az
    namespace: capo-test
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: "cluster-api-multi-az-control-plane"
    namespace: capo-test
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OscCluster
metadata:
  name:  cluster-api-multi-az
  namespace: capo-test
spec:
  network:
    clusterName: cluster-api-multi-az
    loadBalancer:
      loadbalancername: capo-k8s
      clusterName: cluster-api-multi-az
    net:
      clusterName: cluster-api-multi-az
    internetService:
      clusterName: cluster-api-multi-az
    # TODO: use multiple nat services and set correct sg's
    natServices:
      - name: cluster-api-multi-az-eu-west-2a
        clusterName: cluster-api-multi-az
      - name: cluster-api-multi-az-eu-west-2b
        clusterName: cluster-api-multi-az
    bastion:
      clusterName: cluster-api-multi-az
      enable: false
    subnets:
    - name: cluster-api-multi-az-eu-west-2a
      ipSubnetRange: "10.42.0.0/24"
      subregionName: eu-west-2a
    - name: cluster-api-multi-az-eu-west-2b
      ipSubnetRange: "10.42.1.0/24"
      subregionName: eu-west-2b
    routeTables:
    - name: cluster-api-multi-az-eu-west-2a
      subnets:
      - cluster-api-multi-az-eu-west-2a
      routes:
      - name: local
    securityGroups:
    - name: cluster-api-multi-az-eu-west-2a
# ---
# apiVersion: cluster.x-k8s.io/v1beta1
# kind: MachineDeployment
# metadata:
#   name: "cluster-api-multi-az-md-0-eu-west-2a"
#   namespace: capo-test
# spec:
#   clusterName: "cluster-api-multi-az"
#   replicas: 1
#   selector:
#     matchLabels:
#   template:
#     spec:
#       clusterName: "cluster-api-multi-az"
#       version: "1.22.11"
#       bootstrap:
#         configRef:
#           name: "cluster-api-multi-az-md-0"
#           apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
#           kind: KubeadmConfigTemplate
#           namespace: capo-test
#       infrastructureRef:
#         name: "cluster-api-multi-az-md-0-eu-west-2a"
#         apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
#         kind: OscMachineTemplate
#         namespace: capo-test
# ---
# apiVersion: cluster.x-k8s.io/v1beta1
# kind: MachineDeployment
# metadata:
#   name: "cluster-api-multi-az-md-0-eu-west-2b"
#   namespace: capo-test
# spec:
#   clusterName: "cluster-api-multi-az"
#   replicas: 1
#   selector:
#     matchLabels:
#   template:
#     spec:
#       clusterName: "cluster-api-multi-az"
#       version: "1.22.11"
#       bootstrap:
#         configRef:
#           name: "cluster-api-multi-az-md-0"
#           apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
#           kind: KubeadmConfigTemplate
#           namespace: capo-test
#       infrastructureRef:
#         name: "cluster-api-multi-az-md-0-eu-west-2b"
#         apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
#         kind: OscMachineTemplate
#         namespace: capo-test
# ---
# apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
# kind: OscMachineTemplate
# metadata:
#   name: "cluster-api-multi-az-md-0-eu-west-2a"
#   namespace: capo-test
# spec:
#   template:
#     spec:
#       node:
#         clusterName: cluster-api-multi-az
#         image:
#           name: ubuntu-2004-2004-kubernetes-v1.22.11-2022-08-22
#         keypair:
#           name: cluster-api-test
#           deleteKeypair: true
#         vm:
#           clusterName: cluster-api-multi-az
#           rootDisk:
#             rootDiskSize: 30
#             rootDiskIops: 1500
#             rootDiskType: "gp2"
#           keypairName: cluster-api-test
#           subnetName: cluster-api-multi-az-eu-west-2a
#           vmType: "tinav6.c2r4p2"
# ---
# apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
# kind: OscMachineTemplate
# metadata:
#   name: "cluster-api-multi-az-md-0-eu-west-2b"
#   namespace: capo-test
# spec:
#   template:
#     spec:
#       node:
#         clusterName: cluster-api-multi-az
#         image:
#           name: ubuntu-2004-2004-kubernetes-v1.22.11-2022-08-22
#         keypair:
#           name: cluster-api-test
#           deleteKeypair: true
#         vm:
#           clusterName: cluster-api-multi-az
#           rootDisk:
#             rootDiskSize: 30
#             rootDiskIops: 1500
#             rootDiskType: "gp2"
#           keypairName: cluster-api-test
#           subnetName: cluster-api-multi-az-eu-west-2b
#           vmType: "tinav6.c2r4p2"
# ---
# apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
# kind: OscMachineTemplate
# metadata:
#   name: "cluster-api-multi-az-control-plane-eu-west-2a"
#   namespace: capo-test
# spec:
#   template:
#     spec:
#       node:
#         clusterName: cluster-api-multi-az
#         image:
#           name: ubuntu-2004-2004-kubernetes-v1.22.11-2022-08-22
#         keypair:
#           name: cluster-api-test
#           deleteKeypair: true
#         vm:
#           clusterName: cluster-api-multi-az
#           keypairName: cluster-api-test
#           subnetName: cluster-api-multi-az-eu-west-2a
#           rootDisk:
#             rootDiskSize: 30
#             rootDiskIops: 1500
#             rootDiskType: "gp2"
#           role: controlplane
#           loadBalancerName: capo-k8s
#           vmType: "tinav6.c4r8p1"
# ---
# apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
# kind: OscMachineTemplate
# metadata:
#   name: "cluster-api-multi-az-control-plane-eu-west-2b"
#   namespace: capo-test
# spec:
#   template:
#     spec:
#       node:
#         clusterName: cluster-api-multi-az
#         image:
#           name: ubuntu-2004-2004-kubernetes-v1.22.11-2022-08-22
#         keypair:
#           name: cluster-api-test
#           deleteKeypair: true
#         vm:
#           clusterName: cluster-api-multi-az
#           keypairName: cluster-api-test
#           subnetName: cluster-api-multi-az-eu-west-2b
#           rootDisk:
#             rootDiskSize: 30
#             rootDiskIops: 1500
#             rootDiskType: "gp2"
#           role: controlplane
#           loadBalancerName: capo-k8s
#           vmType: "tinav6.c4r8p1"
# ---
# apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
# kind: KubeadmConfigTemplate
# metadata:
#   name: "cluster-api-multi-az-md-0"
#   namespace: capo-test
# spec:
#   template:
#     spec:
#       files:
#       - content: |
#           #!/bin/bash

#           curl https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64 -Lo /tmp/runc.amd64
#           chmod +x /tmp/runc.amd64
#           \cp -f /tmp/runc.amd64 /usr/local/sbin/runc
#         owner: root:root
#         path: /tmp/set_runc.sh
#         permissions: "0744"
#       joinConfiguration:
#         nodeRegistration:
#           name: "{{ ds.meta_data.local_hostname }}"
#           kubeletExtraArgs:
#             cloud-provider: external
#             provider-id: aws:///'{{ ds.meta_data.placement.availability_zone }}'/'{{ ds.meta_data.instance_id }}'
#       preKubeadmCommands:
#         - sh /tmp/set_runc.sh
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "cluster-api-multi-az-control-plane-eu-west-2a"
spec:
  replicas: 1
  machineTemplate:
    infrastructureRef:
      kind: OscMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      name: "cluster-api-multi-az-control-plane-eu-west-2a"
      namespace: capo-test
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: aws:///'{{ ds.meta_data.placement.availability_zone }}'/'{{ ds.meta_data.instance_id }}'
        name: '{{ ds.meta_data.local_hostname }}'
    files:
    - content: |
        #!/bin/bash
        curl https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64 -Lo /tmp/runc.amd64
        chmod +x /tmp/runc.amd64
        \cp -f /tmp/runc.amd64 /usr/local/sbin/runc
      owner: root:root
      path: /tmp/set_runc.sh
      permissions: "0744"
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
    preKubeadmCommands:
      - sh /tmp/set_runc.sh
  version: "1.22.11"
# ---
# kind: KubeadmControlPlane
# apiVersion: controlplane.cluster.x-k8s.io/v1beta1
# metadata:
#   name: "cluster-api-multi-az-control-plane-eu-west-2b"
# spec:
#   replicas: 1
#   machineTemplate:
#     infrastructureRef:
#       kind: OscMachineTemplate
#       apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
#       name: "cluster-api-multi-az-control-plane-eu-west-2b"
#       namespace: capo-test
#   kubeadmConfigSpec:
#     initConfiguration:
#       nodeRegistration:
#         kubeletExtraArgs:
#           cloud-provider: external
#           provider-id: aws:///'{{ ds.meta_data.placement.availability_zone }}'/'{{ ds.meta_data.instance_id }}'
#         name: '{{ ds.meta_data.local_hostname }}'
#     files:
#     - content: |
#         #!/bin/bash
#         curl https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64 -Lo /tmp/runc.amd64
#         chmod +x /tmp/runc.amd64
#         \cp -f /tmp/runc.amd64 /usr/local/sbin/runc
#       owner: root:root
#       path: /tmp/set_runc.sh
#       permissions: "0744"
#     joinConfiguration:
#       nodeRegistration:
#         kubeletExtraArgs:
#           cloud-provider: external
#     preKubeadmCommands:
#       - sh /tmp/set_runc.sh
#   version: "1.22.11"
